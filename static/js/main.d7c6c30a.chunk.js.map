{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Container/Container.js","js/localStorage.js","hooks/useLocaleStorage.js","App.js","index.js"],"names":["module","exports","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","target","value","className","s","contactForm","preventDefault","find","contact","alert","fieldWrapper","field","label","type","pattern","title","required","onChange","Filter","ContactListItem","onClick","btnDelete","ContactList","onContactDelete","map","id","listItem","Container","children","container","LS_KEYS","useLocaleStorage","key","defaultValue","data","localStorage","getItem","JSON","parse","undefined","err","console","error","storage","state","setState","isFirstRender","useRef","useEffect","current","stringify","setItem","App","setContacts","filter","setFilter","userInfo","generateId","normalizedFilter","toLowerCase","includes","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7c6c30a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"ContactForm_field__2c9Zi\",\"fieldWrapper\":\"ContactForm_fieldWrapper__iMy9i\",\"label\":\"ContactForm_label__378f8\",\"contactForm\":\"ContactForm_contactForm__OrlO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"Filter_field__1fRnc\",\"label\":\"Filter_label__3DcZT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactListItem_btnDelete__3JKCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__29Cbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ contacts, onSubmit }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleInputChange = e => {\n        const { name, value } = e.target;\n\n        name === 'name' ? setName(value) : setNumber(value);\n    };\n\n    const resetState = () => {\n        setName('');\n        setNumber('');\n    };\n\n    const isContactNameExist = () =>\n        contacts.find(contact => contact.name === name);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (isContactNameExist()) {\n            alert(`${name} is already in contacts`);\n            return;\n        }\n\n        onSubmit({ name, number });\n        resetState();\n    };\n\n    return (\n        <form className={s.contactForm} onSubmit={handleSubmit}>\n            <div className={s.fieldWrapper}>\n                <label className={s.field}>\n                    <span className={s.label}>Name</span>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        value={name}\n                        onChange={handleInputChange}\n                    />\n                </label>\n                <label className={s.field}>\n                    <span className={s.label}>Number</span>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        value={number}\n                        onChange={handleInputChange}\n                    />\n                </label>\n            </div>\n            <button type=\"submit\">Add contact</button>\n        </form>\n    );\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    contacts: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n    return (\n        <label className={s.field}>\n            <span className={s.label}>Find contacts by name</span>\n            <input\n                type=\"text\"\n                name=\"filter\"\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nfunction ContactListItem({ name, number, onClick }) {\n    return (\n        <>\n            <span>\n                {name}: {number}\n            </span>\n            <button className={s.btnDelete} type=\"button\" onClick={onClick}>\n                Delete\n            </button>\n        </>\n    );\n}\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onContactDelete }) {\n    return (\n        <ul>\n            {contacts.map(({ id, name, number }) => (\n                <li className={s.listItem} key={id}>\n                    <ContactListItem\n                        name={name}\n                        number={number}\n                        onClick={() => onContactDelete(id)}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    onContactDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","const LS_KEYS = {\n    contacts: 'contacts',\n};\n\nconst load = key => {\n    try {\n        const data = localStorage.getItem(key);\n\n        return data ? JSON.parse(data) : undefined;\n    } catch (err) {\n        console.error('Get state error: ', err);\n    }\n};\n\nconst save = (key, value) => {\n    try {\n        const data = JSON.stringify(value);\n        localStorage.setItem(key, data);\n    } catch (err) {\n        console.error('Set state error: ', err);\n    }\n};\n\nexport { load, save, LS_KEYS };\n","import { useState, useEffect, useRef } from 'react';\nimport * as storage from '../js/localStorage';\n\nexport default function useLocaleStorage(key, defaultValue) {\n    const [state, setState] = useState(() => storage.load(key) || defaultValue);\n    const isFirstRender = useRef(true);\n\n    useEffect(() => {\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n            return;\n        }\n\n        storage.save(key, state);\n    }, [key, state]);\n\n    return [state, setState];\n}\n","import { useState } from 'react';\nimport { v4 as generateId } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport Container from './components/Container';\nimport * as storage from './js/localStorage';\nimport useLocaleStorage from './hooks/useLocaleStorage';\n\nfunction App() {\n    const [contacts, setContacts] = useLocaleStorage(\n        storage.LS_KEYS.contacts,\n        [],\n    );\n    const [filter, setFilter] = useState('');\n\n    const handleFormSubmit = userInfo =>\n        setContacts(contacts => [\n            ...contacts,\n            {\n                id: generateId(),\n                ...userInfo,\n            },\n        ]);\n\n    const handleFilterChange = e => setFilter(e.target.value);\n\n    const getFilteredContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    const handleContactDelete = contactId =>\n        setContacts(contacts => contacts.filter(({ id }) => id !== contactId));\n\n    return (\n        <Container>\n            <h1>Phonebook</h1>\n            <ContactForm onSubmit={handleFormSubmit} contacts={[...contacts]} />\n\n            <h2>Contacts</h2>\n            <Filter value={filter} onChange={handleFilterChange} />\n            <ContactList\n                contacts={getFilteredContacts()}\n                onContactDelete={handleContactDelete}\n            />\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}